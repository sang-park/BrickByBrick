{"version":3,"sources":["components/VideoPlayer.tsx","types/enums.ts","components/StatButtons.tsx","utils/utils.ts","components/TeamSetup.tsx","components/PlayerDetails.tsx","components/PlayerStats.tsx","components/PlayerSelect.tsx","mocks/players.ts","mocks/teams.ts","App.tsx","hooks/useTeamLogic.ts","hooks/usePlayerLogic.ts","reportWebVitals.js","index.js"],"names":["VideoPlayer","_useState","useState","_useState2","_slicedToArray","ytVideo","setYtVideo","React","createElement","type","onChange","e","target","value","YouTube","videoId","TeamType","StatType","StatButtons","_ref","onStatSelected","className","onClick","twoPointsMade","twoPointsMissed","threePointsMade","threePointsMissed","assists","oRebounds","steals","dRebounds","blocks","turnovers","getDefaultStatline","defaultStat","key","TeamSetup","addPlayerToTeam","playerName","setPlayerName","_useState3","_useState4","playerNumber","setPlayerNumber","_useState5","HOME","_useState6","team","setTeam","AWAY","placeholder","newPlayer","id","Date","getTime","name","number","stats","PlayerDetails","player","twoPointMade","twoPointMissed","threePointMade","threePointMissed","oReb","dReb","tReb","PlayerStats","teams","map","teamIndex","players","PlayerSelect","updatePlayerStat","mockPlayers","_stats","_defineProperty","_stats2","_stats3","_stats4","_stats5","_stats6","_stats7","_stats8","_stats9","_stats10","mockTeams","slice","App","_useTeamLogic","initialTeams","setTeams","useCallback","teamType","findIndex","newTeam","concat","_toConsumableArray","updatedTeams","push","getTeamScore","_step","score","_iterator","_createForOfIteratorHelper","s","n","done","err","f","useTeamLogic","_usePlayerLogic","selectedStat","setSelectedStat","handleStatSelection","stat","playerId","playerIndex","usePlayerLogic","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.e638b03f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport YouTube from 'react-youtube';\nimport { InputChangeEvent } from '../types/types';\n\nconst VideoPlayer = () => {\n    const [ytVideo, setYtVideo] = useState(\"a3xoAZpm_0A\");\n\n    const change = (e: InputChangeEvent) => {\n        setYtVideo(e.target.value);\n    }\n\n    return (\n        <div>\n            Youtube video ID (whatever comes after v=): <input type=\"text\" onChange={change} value={ytVideo}></input>\n            <YouTube videoId={ytVideo} />\n        </div>\n    );\n}\n\nexport default VideoPlayer;","enum TeamType {\n    HOME = \"HOME\",\n    AWAY = \"AWAY\"\n}\nenum StatType {\n    twoPointsMade = \"twoPointsMade\",\n    twoPointsMissed = \"twoPointsMissed\",\n    threePointsMade = \"threePointsMade\",\n    threePointsMissed = \"threePointsMissed\",\n    oRebounds = \"oRebounds\",\n    dRebounds = \"dRebounds\",\n    assists = \"assists\",\n    steals = \"steals\",\n    blocks = \"blocks\",\n    turnovers = \"turnovers\",\n}\n\n\nexport { TeamType, StatType };","import React from 'react';\nimport { StatType } from '../types/enums'\n\ninterface StatButtonsProps {\n    onStatSelected: (stat: StatType) => void;\n};\n\nconst StatButtons = ({ onStatSelected }: StatButtonsProps) => {\n\n    return (\n        <div className=\"stat-buttons\">\n            <button className=\"two-pt-made\" onClick={() => onStatSelected(StatType.twoPointsMade)}>2 pt Made</button>\n            <button className=\"two-pt-missed\" onClick={() => onStatSelected(StatType.twoPointsMissed)}>2 pt Missed</button>\n            <button className=\"three-pt-made\" onClick={() => onStatSelected(StatType.threePointsMade)}>3 pt Made</button>\n            <button className=\"three-pt-missed\" onClick={() => onStatSelected(StatType.threePointsMissed)}>3 pt Missed</button>\n            <button className=\"ast\" onClick={() => onStatSelected(StatType.assists)}>Assist</button>\n            <button className=\"oreb\" onClick={() => onStatSelected(StatType.oRebounds)}>O-Rebound</button>\n            <button className=\"stl\" onClick={() => onStatSelected(StatType.steals)}>Steal</button>\n            <button className=\"dreb\" onClick={() => onStatSelected(StatType.dRebounds)}>D-Rebound</button>\n            <button className=\"blk\" onClick={() => onStatSelected(StatType.blocks)}>Block</button>\n            <button className=\"to\" onClick={() => onStatSelected(StatType.turnovers)}>Turnover</button>\n        </div>\n    );\n}\n\nexport default StatButtons;\n","import { StatType } from \"../types/enums\"\nimport { Stat } from \"../types/types\";\n\nconst getDefaultStatline = (): Stat => {\n    let defaultStat: Stat = {} as Stat;\n    for (let key in StatType) {\n        defaultStat[StatType[key as keyof typeof StatType]] = 0;\n    }\n    return defaultStat;\n}\n\nexport { getDefaultStatline }","import React, { useState } from 'react';\nimport { TeamType } from '../types/enums';\nimport { Player } from '../types/types';\nimport { getDefaultStatline } from '../utils/utils'\n\ninterface TeamSetupProp {\n    addPlayerToTeam: (teamType: TeamType, player: Player) => void;\n}\n\nconst TeamSetup = ({ addPlayerToTeam }: TeamSetupProp) => {\n    const [playerName, setPlayerName] = useState(\"\");\n    const [playerNumber, setPlayerNumber] = useState(\"\");\n    const [team, setTeam] = useState<TeamType>(TeamType.HOME);\n\n    const handleAddPlayer = () => {\n        if (playerName) {\n            const newPlayer: Player = {\n                id: new Date().getTime(),\n                name: playerName,\n                number: playerNumber,\n                stats: getDefaultStatline(),\n            };\n\n            // Directly add the player to the selected team\n            addPlayerToTeam(team, newPlayer);\n\n            // Clear the inputs\n            setPlayerName(\"\");\n            setPlayerNumber(\"\");\n        }\n    };\n\n    return (\n        <div>\n            <div>\n                <label>Select Team:</label>\n                <select value={team} onChange={e => setTeam(e.target.value === TeamType.HOME ? TeamType.HOME : TeamType.AWAY)}>\n                    <option value=\"Home\">Home</option>\n                    <option value=\"Away\">Away</option>\n                </select>\n            </div>\n            <div>\n                <input\n                    value={playerName}\n                    onChange={e => setPlayerName(e.target.value)}\n                    placeholder=\"Player Name\"\n                />\n                <input\n                    value={playerNumber}\n                    onChange={e => setPlayerNumber(e.target.value)}\n                    placeholder=\"Player Number\"\n                />\n                <button onClick={handleAddPlayer}>Add Player</button>\n            </div>\n        </div>\n    );\n}\n\nexport default TeamSetup;\n","import React from 'react';\nimport { StatType } from '../types/enums';\nimport { Player } from '../types/types';\n\ninterface PlayerDetailsProps {\n    player: Player;\n}\n\nconst PlayerDetails = ({ player }: PlayerDetailsProps) => {\n    let twoPointMade = player.stats[StatType.twoPointsMade] || 0;\n    let twoPointMissed = player.stats[StatType.twoPointsMissed] || 0;\n    let threePointMade = player.stats[StatType.threePointsMade] || 0;\n    let threePointMissed = player.stats[StatType.threePointsMissed] || 0;\n    let oReb = player.stats[StatType.oRebounds] || 0;\n    let dReb = player.stats[StatType.dRebounds] || 0;\n    let tReb = oReb + dReb;\n\n    const getFieldGoalsAttempted = () => {\n        return twoPointMade + twoPointMissed + threePointMade + threePointMissed;\n    }\n\n    const getFieldGoalsMade = () => {\n        return twoPointMade + threePointMade;\n    }\n\n    const getThreePointAttempted = () => {\n        return threePointMade + threePointMissed;\n    }\n\n    return (\n        <tr>\n            <td>{player.number}</td>\n            <td>{player.name}</td>\n            <td>{getFieldGoalsMade()}</td>\n            <td>{getFieldGoalsAttempted()}</td>\n            <td>{threePointMade}</td>\n            <td>{getThreePointAttempted()}</td>\n            <td>{oReb}</td>\n            <td>{dReb}</td>\n            <td>{tReb}</td>\n            <td>{player.stats[StatType.assists] || 0}</td>\n            <td>{player.stats[StatType.steals] || 0}</td>\n            <td>{player.stats[StatType.blocks] || 0}</td>\n            <td>{player.stats[StatType.turnovers] || 0}</td>\n        </tr>\n    );\n}\n\nexport default PlayerDetails;\n","import React from 'react';\nimport PlayerDetails from './PlayerDetails';\nimport { Team } from '../types/types';\n\ninterface PlayerStatsProps {\n    teams: Team[];\n};\n\nconst PlayerStats = ({ teams }: PlayerStatsProps) => {\n    return (\n        <div>\n            {teams.map((team: Team, teamIndex: number) => (\n                <div key={teamIndex}>\n                    <h2>{team.type}</h2>\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>Number</th>\n                                <th>Name</th>\n                                <th>FGM</th>\n                                <th>FGA</th>\n                                <th>3PTM</th>\n                                <th>3PTA</th>\n                                <th>OR</th>\n                                <th>DR</th>\n                                <th>TR</th>\n                                <th>AST</th>\n                                <th>STL</th>\n                                <th>BLK</th>\n                                <th>TO</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {team.players.map(player => (\n                                <PlayerDetails key={player.id} player={player} />\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            ))}\n        </div>\n    );\n}\n\nexport default PlayerStats;\n","import React from 'react';\nimport { Team } from '../types/types';\nimport { TeamType } from '../types/enums';\n\ninterface PlayerSelectProps {\n    team: Team;\n    updatePlayerStat: (teamType: TeamType, playerId: number) => void;\n}\n\nconst PlayerSelect = ({ team, updatePlayerStat }: PlayerSelectProps) => {\n\n    return (\n        <div key={team.type} className=\"team\">\n            <div className=\"team-name\">{team.type}</div>\n            <div className=\"player-list\">\n                {team.players.map(player => (\n                    <div key={player.id} className=\"player\" onClick={() => updatePlayerStat(team.type, player.id)}>\n                        {player.name}\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default PlayerSelect;\n","import { StatType } from \"../types/enums\";\n\nconst playerOne = {\n    id: 1,\n    name: \"Sang\",\n    number: \"13\",\n    stats: {\n        [StatType.twoPointsMade]: 5,\n        [StatType.twoPointsMissed]: 3,\n        [StatType.threePointsMade]: 2,\n        [StatType.threePointsMissed]: 4,\n        [StatType.oRebounds]: 5,\n        [StatType.dRebounds]: 6,\n        [StatType.assists]: 7,\n        [StatType.steals]: 8,\n        [StatType.blocks]: 9,\n        [StatType.turnovers]: 0,\n    }\n};\n\nconst playerTwo = {\n    id: 2,\n    name: \"Kenny\",\n    number: \"0\",\n    stats: {\n        [StatType.twoPointsMade]: 4,\n        [StatType.twoPointsMissed]: 6,\n        [StatType.threePointsMade]: 2,\n        [StatType.threePointsMissed]: 4,\n        [StatType.oRebounds]: 6,\n        [StatType.dRebounds]: 5,\n        [StatType.assists]: 4,\n        [StatType.steals]: 3,\n        [StatType.blocks]: 2,\n        [StatType.turnovers]: 1,\n    }\n};\nconst playerThree = {\n    id: 3,\n    name: \"Bryce\",\n    number: \"11\",\n    stats: {\n        [StatType.twoPointsMade]: 2,\n        [StatType.twoPointsMissed]: 5,\n        [StatType.threePointsMade]: 1,\n        [StatType.threePointsMissed]: 2,\n        [StatType.oRebounds]: 0,\n        [StatType.dRebounds]: 0,\n        [StatType.assists]: 2,\n        [StatType.steals]: 3,\n        [StatType.blocks]: 2,\n        [StatType.turnovers]: 1,\n    }\n};\nconst playerFour = {\n    id: 4,\n    name: \"Jeff\",\n    number: \"25\",\n    stats: {\n        [StatType.twoPointsMade]: 4,\n        [StatType.twoPointsMissed]: 2,\n        [StatType.threePointsMade]: 3,\n        [StatType.threePointsMissed]: 2,\n        [StatType.oRebounds]: 0,\n        [StatType.dRebounds]: 0,\n        [StatType.assists]: 2,\n        [StatType.steals]: 3,\n        [StatType.blocks]: 2,\n        [StatType.turnovers]: 1,\n    }\n};\nconst playerFive = {\n    id: 5,\n    name: \"Andrew\",\n    number: \"7\",\n    stats: {\n        [StatType.twoPointsMade]: 4,\n        [StatType.twoPointsMissed]: 2,\n        [StatType.threePointsMade]: 3,\n        [StatType.threePointsMissed]: 2,\n        [StatType.oRebounds]: 0,\n        [StatType.dRebounds]: 0,\n        [StatType.assists]: 2,\n        [StatType.steals]: 3,\n        [StatType.blocks]: 2,\n        [StatType.turnovers]: 1,\n    }\n};\nconst playerSix = {\n    id: 6,\n    name: \"Rodell\",\n    number: \"15\",\n    stats: {\n        [StatType.twoPointsMade]: 6,\n        [StatType.twoPointsMissed]: 2,\n        [StatType.threePointsMade]: 3,\n        [StatType.threePointsMissed]: 2,\n        [StatType.oRebounds]: 0,\n        [StatType.dRebounds]: 0,\n        [StatType.assists]: 2,\n        [StatType.steals]: 3,\n        [StatType.blocks]: 2,\n        [StatType.turnovers]: 1,\n    }\n}\nconst playerSeven = {\n    id: 7,\n    name: \"Mike\",\n    number: \"23\",\n    stats: {\n        [StatType.twoPointsMade]: 5,\n        [StatType.twoPointsMissed]: 3,\n        [StatType.threePointsMade]: 2,\n        [StatType.threePointsMissed]: 2,\n        [StatType.oRebounds]: 0,\n        [StatType.dRebounds]: 0,\n        [StatType.assists]: 2,\n        [StatType.steals]: 3,\n        [StatType.blocks]: 2,\n        [StatType.turnovers]: 1,\n    }\n};\nconst playerEight = {\n    id: 8,\n    name: \"Max\",\n    number: \"16\",\n    stats: {\n        [StatType.twoPointsMade]: 5,\n        [StatType.twoPointsMissed]: 3,\n        [StatType.threePointsMade]: 2,\n        [StatType.threePointsMissed]: 2,\n        [StatType.oRebounds]: 0,\n        [StatType.dRebounds]: 0,\n        [StatType.assists]: 2,\n        [StatType.steals]: 3,\n        [StatType.blocks]: 2,\n        [StatType.turnovers]: 1,\n    }\n};\nconst playerNine = {\n    id: 9,\n    name: \"Timmy\",\n    number: \"1\",\n    stats: {\n        [StatType.twoPointsMade]: 5,\n        [StatType.twoPointsMissed]: 3,\n        [StatType.threePointsMade]: 2,\n        [StatType.threePointsMissed]: 2,\n        [StatType.oRebounds]: 0,\n        [StatType.dRebounds]: 0,\n        [StatType.assists]: 2,\n        [StatType.steals]: 3,\n        [StatType.blocks]: 2,\n        [StatType.turnovers]: 1,\n    }\n};\nconst playerTen = {\n    id: 10,\n    name: \"Kevin\",\n    number: \"00\",\n    stats: {\n        [StatType.twoPointsMade]: 5,\n        [StatType.twoPointsMissed]: 3,\n        [StatType.threePointsMade]: 2,\n        [StatType.threePointsMissed]: 2,\n        [StatType.oRebounds]: 0,\n        [StatType.dRebounds]: 0,\n        [StatType.assists]: 2,\n        [StatType.steals]: 3,\n        [StatType.blocks]: 2,\n        [StatType.turnovers]: 1,\n    }\n};\n\nconst mockPlayers = [playerOne,\n    playerTwo,\n    playerThree,\n    playerFour,\n    playerFive,\n    playerSix,\n    playerSeven,\n    playerEight,\n    playerNine,\n    playerTen]\n\nexport { mockPlayers };","import { TeamType } from \"../types/enums\";\nimport { Team } from \"../types/types\";\nimport { mockPlayers } from \"./players\";\n\nexport const mockTeams: Team[] = [\n    {\n        type: TeamType.HOME,\n        players: mockPlayers.slice(0, 5),\n    }, {\n        type: TeamType.AWAY,\n        players: mockPlayers.slice(5),\n\n    }\n];\n\n","import './App.scss';\nimport React from 'react';\nimport VideoPlayer from './components/VideoPlayer';\nimport StatButtons from './components/StatButtons';\nimport TeamSetup from './components/TeamSetup';\nimport PlayerStats from './components/PlayerStats';\nimport PlayerSelect from './components/PlayerSelect';\nimport { useTeamLogic } from './hooks/useTeamLogic';\nimport { usePlayerLogic } from './hooks/usePlayerLogic';\nimport { mockTeams } from './mocks/teams';\n\nfunction App() {\n    const {\n        teams,\n        addPlayerToTeam,\n        getTeamScore,\n    } = useTeamLogic(mockTeams);\n\n    const {\n        selectedStat,\n        handleStatSelection,\n        updatePlayerStat,\n    } = usePlayerLogic(teams);\n\n    return (\n        <div className=\"App\">\n            <TeamSetup addPlayerToTeam={addPlayerToTeam} />\n            <VideoPlayer />\n            <div>\n                total points:\n                {teams.map((team) => (\n                    <div key={team.type}>\n                        {team.type}: {getTeamScore(team)}\n                    </div>\n                ))}\n            </div>\n            <div className=\"player-select-wrapper\">\n                {selectedStat ? (\n                    teams.map((team) => (\n                        <PlayerSelect key={team.type} team={team} updatePlayerStat={updatePlayerStat} />\n                    ))\n                ) : (\n                    <StatButtons onStatSelected={handleStatSelection} />\n                )}\n            </div>\n            <PlayerStats teams={teams} />\n        </div>\n    );\n}\n\nexport default App;\n","import { useCallback, useState } from \"react\";\nimport { Player, Team } from \"../types/types\";\nimport { TeamType } from \"../types/enums\";\n\nfunction useTeamLogic(initialTeams: Team[]) {\n    const [teams, setTeams] = useState<Team[]>(initialTeams);\n\n    const addPlayerToTeam = useCallback((teamType: TeamType, player: Player) => {\n        // Find the index of the team to which we want to add the player\n        const teamIndex = teams.findIndex(team => team.type === teamType);\n\n        // If the team doesn't exist, create it and add the player\n        if (teamIndex === -1) {\n            const newTeam: Team = {\n                type: teamType,\n                players: [player]\n            };\n            setTeams([...teams, newTeam]);\n        } else {\n            // If the team exists, add the player to it\n            const updatedTeams = [...teams];\n            updatedTeams[teamIndex].players.push(player);\n            setTeams(updatedTeams);\n        }\n    }, [teams]);\n\n    const getTeamScore = useCallback((team: Team) => {\n        let score = 0;\n        for (let player of team.players) {\n            if (player.stats.twoPointsMade && player.stats.twoPointsMade > 0) {\n                score += player.stats.twoPointsMade * 2;\n            }\n            if (player.stats.threePointsMade && player.stats.threePointsMade > 0) {\n                score += player.stats.threePointsMade * 3;\n            }\n        }\n        return score;\n    }, []);\n\n    return {\n        teams,\n        addPlayerToTeam,\n        getTeamScore,\n    };\n}\n\nexport { useTeamLogic };","import { useCallback, useState } from \"react\";\nimport { Team } from \"../types/types\";\nimport { StatType, TeamType } from \"../types/enums\";\n\nfunction usePlayerLogic(initialTeams: Team[]) {\n    const [teams, setTeams] = useState<Team[]>(initialTeams);\n    const [selectedStat, setSelectedStat] = useState<StatType | null>(null);\n\n    const handleStatSelection = useCallback((stat: StatType) => {\n        setSelectedStat(stat);\n    }, []);\n\n    const updatePlayerStat = useCallback((teamType: TeamType, playerId: number) => {\n        // Find the index of the team and player to update the stat\n        const teamIndex = teams.findIndex(team => team.type === teamType);\n        const playerIndex = teams[teamIndex].players.findIndex(player => player.id === playerId);\n\n        const updatedTeams = [...teams];\n        const player = updatedTeams[teamIndex].players[playerIndex];\n\n        if (selectedStat) {\n            player.stats[selectedStat] = (player.stats[selectedStat] || 0) + 1;\n        }\n\n        setTeams(updatedTeams);\n        setSelectedStat(null); // reset the selected stat after updating\n    }, [teams, selectedStat]);\n\n    return {\n        selectedStat,\n        handleStatSelection,\n        updatePlayerStat,\n    };\n}\n\nexport { usePlayerLogic };","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App.tsx';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}