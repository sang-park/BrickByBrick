{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useState } from \"react\";\nfunction usePlayerLogic(initialTeams) {\n  _s();\n  const [teams, setTeams] = useState(initialTeams);\n  const [selectedStat, setSelectedStat] = useState(null);\n  const handleStatSelection = useCallback(stat => {\n    setSelectedStat(stat);\n  }, []);\n  return {\n    selectedStat,\n    handleStatSelection,\n    setTeams,\n    setSelectedStat\n  };\n}\n_s(usePlayerLogic, \"de7y0EtPSMdcQ3dcyd//46Z03mQ=\");\nexport { usePlayerLogic };","map":{"version":3,"names":["useCallback","useState","usePlayerLogic","initialTeams","_s","teams","setTeams","selectedStat","setSelectedStat","handleStatSelection","stat"],"sources":["/Users/shp/BrickByBrick/client/src/hooks/usePlayerLogic.ts"],"sourcesContent":["import { useCallback, useState } from \"react\";\nimport { Team } from \"../types/types\";\nimport { StatType, TeamType } from \"../types/enums\";\n\nfunction usePlayerLogic(initialTeams: Team[]) {\n    const [teams, setTeams] = useState<Team[]>(initialTeams);\n    const [selectedStat, setSelectedStat] = useState<StatType | null>(null);\n\n    const handleStatSelection = useCallback((stat: StatType) => {\n        setSelectedStat(stat);\n    }, []);\n\n    return {\n        selectedStat,\n        handleStatSelection,\n        setTeams,\n        setSelectedStat,\n    };\n}\n\nexport { usePlayerLogic };"],"mappings":";AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAI7C,SAASC,cAAcA,CAACC,YAAoB,EAAE;EAAAC,EAAA;EAC1C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAASE,YAAY,CAAC;EACxD,MAAM,CAACI,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAkB,IAAI,CAAC;EAEvE,MAAMQ,mBAAmB,GAAGT,WAAW,CAAEU,IAAc,IAAK;IACxDF,eAAe,CAACE,IAAI,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACHH,YAAY;IACZE,mBAAmB;IACnBH,QAAQ;IACRE;EACJ,CAAC;AACL;AAACJ,EAAA,CAdQF,cAAc;AAgBvB,SAASA,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}