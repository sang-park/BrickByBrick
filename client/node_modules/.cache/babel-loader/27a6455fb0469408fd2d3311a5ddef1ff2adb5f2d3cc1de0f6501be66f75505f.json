{"ast":null,"code":"import { StatType } from \"../types/enums\";\nconst createRandomStat = (max = 12) => {\n  return Math.round(Math.random() * max);\n};\nconst createRandomStats = () => {\n  return {\n    [StatType.twoPointsMade]: createRandomStat(),\n    [StatType.twoPointsMissed]: createRandomStat(),\n    [StatType.threePointsMade]: createRandomStat(),\n    [StatType.threePointsMissed]: createRandomStat(),\n    [StatType.oRebounds]: createRandomStat(),\n    [StatType.dRebounds]: createRandomStat(),\n    [StatType.assists]: createRandomStat(),\n    [StatType.steals]: createRandomStat(),\n    [StatType.blocks]: createRandomStat(),\n    [StatType.turnovers]: createRandomStat()\n  };\n};\nconst randomStats = [];\n\n// playerId, statType, time\nfor (let i = 1; i < 11; i++) {\n  for (let type in StatType) {\n    const rand = Math.round(Math.random() * 6);\n    for (let j = 0; j < rand; j++) {\n      let newStat = {\n        playerId: i,\n        statType: type,\n        time: Math.round(Math.random() * 300)\n      };\n      randomStats.push(newStat);\n    }\n  }\n}\nconsole.log(randomStats);\nconst playerOne = {\n  id: 1,\n  name: \"Sang\",\n  number: \"13\",\n  stats: {\n    [StatType.twoPointsMade]: 5,\n    [StatType.twoPointsMissed]: 3,\n    [StatType.threePointsMade]: 2,\n    [StatType.threePointsMissed]: 4,\n    [StatType.oRebounds]: 5,\n    [StatType.dRebounds]: 6,\n    [StatType.assists]: 7,\n    [StatType.steals]: 8,\n    [StatType.blocks]: 9,\n    [StatType.turnovers]: 0\n  }\n};\nconst playerTwo = {\n  id: 2,\n  name: \"Kenny\",\n  number: \"0\",\n  stats: {\n    [StatType.twoPointsMade]: 4,\n    [StatType.twoPointsMissed]: 6,\n    [StatType.threePointsMade]: 2,\n    [StatType.threePointsMissed]: 4,\n    [StatType.oRebounds]: 6,\n    [StatType.dRebounds]: 5,\n    [StatType.assists]: 4,\n    [StatType.steals]: 3,\n    [StatType.blocks]: 2,\n    [StatType.turnovers]: 1\n  }\n};\nconst playerThree = {\n  id: 3,\n  name: \"Bryce\",\n  number: \"11\",\n  stats: createRandomStats()\n};\nconst playerFour = {\n  id: 4,\n  name: \"Jeff\",\n  number: \"25\",\n  stats: createRandomStats()\n};\nconst playerFive = {\n  id: 5,\n  name: \"Andrew\",\n  number: \"7\",\n  stats: createRandomStats()\n};\nconst playerSix = {\n  id: 6,\n  name: \"Rodell\",\n  number: \"15\",\n  stats: createRandomStats()\n};\nconst playerSeven = {\n  id: 7,\n  name: \"Mike\",\n  number: \"23\",\n  stats: createRandomStats()\n};\nconst playerEight = {\n  id: 8,\n  name: \"Max\",\n  number: \"16\",\n  stats: createRandomStats()\n};\nconst playerNine = {\n  id: 9,\n  name: \"Timmy\",\n  number: \"1\",\n  stats: createRandomStats()\n};\nconst playerTen = {\n  id: 10,\n  name: \"Kevin\",\n  number: \"00\",\n  stats: createRandomStats()\n};\nconst mockPlayers = [playerOne, playerTwo, playerThree, playerFour, playerFive, playerSix, playerSeven, playerEight, playerNine, playerTen];\nexport { mockPlayers };","map":{"version":3,"names":["StatType","createRandomStat","max","Math","round","random","createRandomStats","twoPointsMade","twoPointsMissed","threePointsMade","threePointsMissed","oRebounds","dRebounds","assists","steals","blocks","turnovers","randomStats","i","type","rand","j","newStat","playerId","statType","time","push","console","log","playerOne","id","name","number","stats","playerTwo","playerThree","playerFour","playerFive","playerSix","playerSeven","playerEight","playerNine","playerTen","mockPlayers"],"sources":["/Users/shp/BrickByBrick/src/mocks/players.ts"],"sourcesContent":["import { StatType } from \"../types/enums\";\nimport { StatLog } from \"../types/types\";\n\nconst createRandomStat = (max: number = 12) => {\n    return Math.round(Math.random() * max);\n}\n\nconst createRandomStats = () => {\n    return {\n        [StatType.twoPointsMade]: createRandomStat(),\n        [StatType.twoPointsMissed]: createRandomStat(),\n        [StatType.threePointsMade]: createRandomStat(),\n        [StatType.threePointsMissed]: createRandomStat(),\n        [StatType.oRebounds]: createRandomStat(),\n        [StatType.dRebounds]: createRandomStat(),\n        [StatType.assists]: createRandomStat(),\n        [StatType.steals]: createRandomStat(),\n        [StatType.blocks]: createRandomStat(),\n        [StatType.turnovers]: createRandomStat()\n    };\n}\n\nconst randomStats = [];\n\n// playerId, statType, time\nfor (let i = 1; i < 11; i++) {\n    for (let type in StatType) {\n        const rand = Math.round(Math.random() * 6);\n        for (let j = 0; j < rand; j++) {\n            let newStat: StatLog = {\n                playerId: i,\n                statType: type,\n                time: (Math.round(Math.random() * 300))\n            }\n\n            randomStats.push(newStat);\n        }\n    }\n}\n\nconsole.log(randomStats);\n\nconst playerOne = {\n    id: 1,\n    name: \"Sang\",\n    number: \"13\",\n    stats: {\n        [StatType.twoPointsMade]: 5,\n        [StatType.twoPointsMissed]: 3,\n        [StatType.threePointsMade]: 2,\n        [StatType.threePointsMissed]: 4,\n        [StatType.oRebounds]: 5,\n        [StatType.dRebounds]: 6,\n        [StatType.assists]: 7,\n        [StatType.steals]: 8,\n        [StatType.blocks]: 9,\n        [StatType.turnovers]: 0,\n    }\n};\n\nconst playerTwo = {\n    id: 2,\n    name: \"Kenny\",\n    number: \"0\",\n    stats: {\n        [StatType.twoPointsMade]: 4,\n        [StatType.twoPointsMissed]: 6,\n        [StatType.threePointsMade]: 2,\n        [StatType.threePointsMissed]: 4,\n        [StatType.oRebounds]: 6,\n        [StatType.dRebounds]: 5,\n        [StatType.assists]: 4,\n        [StatType.steals]: 3,\n        [StatType.blocks]: 2,\n        [StatType.turnovers]: 1,\n    }\n};\nconst playerThree = {\n    id: 3,\n    name: \"Bryce\",\n    number: \"11\",\n    stats: createRandomStats(),\n};\nconst playerFour = {\n    id: 4,\n    name: \"Jeff\",\n    number: \"25\",\n    stats: createRandomStats(),\n};\nconst playerFive = {\n    id: 5,\n    name: \"Andrew\",\n    number: \"7\",\n    stats: createRandomStats(),\n};\nconst playerSix = {\n    id: 6,\n    name: \"Rodell\",\n    number: \"15\",\n    stats: createRandomStats(),\n}\nconst playerSeven = {\n    id: 7,\n    name: \"Mike\",\n    number: \"23\",\n    stats: createRandomStats(),\n};\nconst playerEight = {\n    id: 8,\n    name: \"Max\",\n    number: \"16\",\n    stats: createRandomStats(),\n};\nconst playerNine = {\n    id: 9,\n    name: \"Timmy\",\n    number: \"1\",\n    stats: createRandomStats(),\n};\nconst playerTen = {\n    id: 10,\n    name: \"Kevin\",\n    number: \"00\",\n    stats: createRandomStats(),\n};\n\nconst mockPlayers = [playerOne,\n    playerTwo,\n    playerThree,\n    playerFour,\n    playerFive,\n    playerSix,\n    playerSeven,\n    playerEight,\n    playerNine,\n    playerTen]\n\nexport { mockPlayers };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}