{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useState } from \"react\";\nfunction usePlayerLogic(initialTeams) {\n  _s();\n  const [teams, setTeams] = useState(initialTeams);\n  const [selectedStat, setSelectedStat] = useState(null);\n  const handleStatSelection = useCallback((stat, ytPlayer) => {\n    setSelectedStat(stat);\n    console.log(ytPlayer);\n  }, []);\n  const updatePlayerStat = useCallback((teamType, playerId) => {\n    // Find the index of the team and player to update the stat\n    const teamIndex = teams.findIndex(team => team.type === teamType);\n    const playerIndex = teams[teamIndex].players.findIndex(player => player.id === playerId);\n    const updatedTeams = [...teams];\n    const player = updatedTeams[teamIndex].players[playerIndex];\n    if (selectedStat) {\n      player.stats[selectedStat] = (player.stats[selectedStat] || 0) + 1;\n    }\n    setTeams(updatedTeams);\n    setSelectedStat(null); // reset the selected stat after updating\n  }, [teams, selectedStat]);\n  return {\n    selectedStat,\n    handleStatSelection,\n    setTeams,\n    setSelectedStat\n  };\n}\n_s(usePlayerLogic, \"QIJa1L340a/GSnzdJjOexKYDbrc=\");\nexport { usePlayerLogic };","map":{"version":3,"names":["useCallback","useState","usePlayerLogic","initialTeams","_s","teams","setTeams","selectedStat","setSelectedStat","handleStatSelection","stat","ytPlayer","console","log","updatePlayerStat","teamType","playerId","teamIndex","findIndex","team","type","playerIndex","players","player","id","updatedTeams","stats"],"sources":["/Users/shp/BrickByBrick/src/hooks/usePlayerLogic.ts"],"sourcesContent":["import { useCallback, useState } from \"react\";\nimport { Team } from \"../types/types\";\nimport { StatType, TeamType } from \"../types/enums\";\n\nfunction usePlayerLogic(initialTeams: Team[]) {\n    const [teams, setTeams] = useState<Team[]>(initialTeams);\n    const [selectedStat, setSelectedStat] = useState<StatType | null>(null);\n\n    const handleStatSelection = useCallback((stat: StatType, ytPlayer: React.RefObject<any> | null) => {\n        setSelectedStat(stat);\n        console.log(ytPlayer);\n    }, []);\n\n    const updatePlayerStat = useCallback((teamType: TeamType, playerId: number) => {\n        // Find the index of the team and player to update the stat\n        const teamIndex = teams.findIndex(team => team.type === teamType);\n        const playerIndex = teams[teamIndex].players.findIndex(player => player.id === playerId);\n\n        const updatedTeams = [...teams];\n        const player = updatedTeams[teamIndex].players[playerIndex];\n\n        if (selectedStat) {\n            player.stats[selectedStat] = (player.stats[selectedStat] || 0) + 1;\n        }\n\n        setTeams(updatedTeams);\n        setSelectedStat(null); // reset the selected stat after updating\n    }, [teams, selectedStat]);\n\n    return {\n        selectedStat,\n        handleStatSelection,\n        setTeams,\n        setSelectedStat,\n    };\n}\n\nexport { usePlayerLogic };"],"mappings":";AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAI7C,SAASC,cAAcA,CAACC,YAAoB,EAAE;EAAAC,EAAA;EAC1C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAASE,YAAY,CAAC;EACxD,MAAM,CAACI,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAkB,IAAI,CAAC;EAEvE,MAAMQ,mBAAmB,GAAGT,WAAW,CAAC,CAACU,IAAc,EAAEC,QAAqC,KAAK;IAC/FH,eAAe,CAACE,IAAI,CAAC;IACrBE,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,gBAAgB,GAAGd,WAAW,CAAC,CAACe,QAAkB,EAAEC,QAAgB,KAAK;IAC3E;IACA,MAAMC,SAAS,GAAGZ,KAAK,CAACa,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAKL,QAAQ,CAAC;IACjE,MAAMM,WAAW,GAAGhB,KAAK,CAACY,SAAS,CAAC,CAACK,OAAO,CAACJ,SAAS,CAACK,MAAM,IAAIA,MAAM,CAACC,EAAE,KAAKR,QAAQ,CAAC;IAExF,MAAMS,YAAY,GAAG,CAAC,GAAGpB,KAAK,CAAC;IAC/B,MAAMkB,MAAM,GAAGE,YAAY,CAACR,SAAS,CAAC,CAACK,OAAO,CAACD,WAAW,CAAC;IAE3D,IAAId,YAAY,EAAE;MACdgB,MAAM,CAACG,KAAK,CAACnB,YAAY,CAAC,GAAG,CAACgB,MAAM,CAACG,KAAK,CAACnB,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC;IACtE;IAEAD,QAAQ,CAACmB,YAAY,CAAC;IACtBjB,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;EAC3B,CAAC,EAAE,CAACH,KAAK,EAAEE,YAAY,CAAC,CAAC;EAEzB,OAAO;IACHA,YAAY;IACZE,mBAAmB;IACnBH,QAAQ;IACRE;EACJ,CAAC;AACL;AAACJ,EAAA,CA/BQF,cAAc;AAiCvB,SAASA,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}